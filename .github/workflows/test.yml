name: Test

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            arch: amd64
            can_test: true
          # Note: for Linux/ARM64 we cross-compile on x86_64 to confirm that building works,
          # but don't attempt to run tests as ARM64 runners are not available in the free tier
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            arch: arm64
            can_test: false
          
          # macOS builds
          - os: macos-latest
            target: x86_64-apple-darwin
            arch: amd64
            can_test: true
          - os: macos-latest
            target: aarch64-apple-darwin
            arch: arm64
            can_test: true
          
          # Windows (only amd64 as arm64 runners aren't available)
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            arch: amd64
            can_test: true

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross-compilation dependencies (Linux ARM64)
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-${{ matrix.arch }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-${{ matrix.arch }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.arch }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Build for target
      run: cargo build --target ${{ matrix.target }} --verbose
    
    - name: Run tests (native targets only)
      if: matrix.can_test == true
      run: cargo test --target ${{ matrix.target }} --verbose
    
    - name: Check cross-compilation (cross-compiled targets only)
      if: matrix.can_test == false
      run: cargo check --target ${{ matrix.target }} --verbose